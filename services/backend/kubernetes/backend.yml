
######################################################
#### External DNS configuration https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md
######################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  # If you're using Amazon EKS with IAM Roles for Service Accounts, specify the following annotation.
  # Otherwise, you may safely omit it.
  annotations:
    # Substitute your account ID and IAM service role name below.
    eks.amazonaws.com/role-arn: arn:aws:iam::850351896280:role/EKS-ExternalDNS
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
      # If you're using kiam or kube2iam, specify the following annotation.
      # Otherwise, you may safely omit it.
      # annotations:
      #   iam.amazonaws.com/role: arn:aws:iam::ACCOUNT-ID:role/IAM-SERVICE-ROLE-NAME
    spec:
      serviceAccountName: external-dns
      tolerations:
      - key: "stateless"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      containers:
      - name: external-dns
        image: k8s.gcr.io/external-dns/external-dns:v0.7.6
        resources:
            limits:
              memory: "2000Mi"
              cpu: "500m"
        args:
        - --source=ingress
        - --provider=aws
        - --policy=upsert-only # would prevent ExternalDNS from deleting any records, omit to enable full synchronization
        - --registry=txt
        # - --txt-owner-id=Z04792731FTSJ5DTB19SH # hosted zone: discostudios.io
      securityContext:
        fsGroup: 65534 # For ExternalDNS to be able to read Kubernetes and AWS token files

---

######################################################
#### Ingress configuration
######################################################

# https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/ingress/annotations/
# https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_LoadBalancerAttribute.html
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mealswipe-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600 # TODO This allows connections to idle 10 minutes. Remove after debugging
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:850351896280:certificate/7ac6a408-6906-4c42-af68-7c513bf22baf
    kubernetes.io/ingress.class: alb
spec:
  rules:
    - host: mealswipesessions.discostudios.io
      http:
        paths:
          - path: "/"
            pathType: Exact
            backend:
              service:
                name: ms-ws
                port:
                  number: 8080
    - host: mealswipe.app
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: ms-website
                port:
                  number: 8080
    - host: www.mealswipe.app
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: ms-website
                port:
                  number: 8080
