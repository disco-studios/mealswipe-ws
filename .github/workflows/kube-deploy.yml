name: kube-deploy

on: [push]
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - "build/kubernetes/**"

jobs:
  build-proto:
    name: kube deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker Build
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 850351896280.dkr.ecr.us-east-1.amazonaws.com/disco-mealswipe
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Docker Push
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 850351896280.dkr.ecr.us-east-1.amazonaws.com/disco-mealswipe
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Configure kubernetes
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates curl
          sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
          echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl

          export KUBECONFIG="$HOME/.kube/config"
          mkdir $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" > $HOME/.kube/config

      - name: Apply kubernetes
        run: |
          kubectl apply -f build/kubernetes

      - name: Rollout kubernetes
        run: |
          kubectl rollout restart deployment ms-ws
